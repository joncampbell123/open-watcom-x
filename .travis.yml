language: c
dist: trusty
sudo: required
os: linux
compiler: gcc

branches:
  only:
  - master

env:
  global:
    - OWTRAVIS_BUILD_REPO_SLUG=open-watcom/travis-ci-ow-builds
    - OWTRAVIS_BUILD_DIR=${HOME}/build/$OWTRAVIS_BUILD_REPO_SLUG
    - OWTRAVIS_LOGS_REPO_SLUG=open-watcom/travis-ci-logs
    - OWTRAVIS_LOGS_DIR=${HOME}/build/$OWTRAVIS_LOGS_REPO_SLUG
    - OWROOT=$TRAVIS_BUILD_DIR
    #
    - OWOBJDIR=binbuild
    - OWRELROOT=$OWROOT/test
    - OWTRAVISDIR=$OWROOT/travis
    - OWDISTRDIR=$OWROOT/distrib
    - OWSRCDIR=$OWROOT/bld
    - OWBINDIR=$OWROOT/build/$OWOBJDIR
    - OWDOCSDIR=$OWROOT/docs
    #
    - OWBRANCH_SF=sourceforge
    - OWVERBOSE=0
    - OWDISTRBUILD=0
    - OWDOCBUILD=0
    - OWDOCQUIET=1
    - CP_OPTS=-Rnv

cache:
  directories:
    - $OWBINDIR
    - $OWSRCDIR/watcom/$OWOBJDIR
    - $OWROOT/test
    - $OWROOT/buildx

before_script:
    # get environment/cache info if debug is active
    - $OWTRAVISDIR/envinfo.sh
    - $OWTRAVISDIR/cacheinf.sh

after_failure:
    # after failure transfer log files back to GitHub repository
    - $OWTRAVISDIR/cacheinf.sh
    - $OWTRAVISDIR/gitupdf.sh

after_success:
    # after success transfer OW build to GitHub repository
    - $OWTRAVISDIR/cacheinf.sh
    - $OWTRAVISDIR/gitupds.sh

jobs:
  allow_failures:
    - os: windows
  include:
    #################################
    - stage: Mirror
      name: "Mirror master branch commits to SF"
      if: type = push
      git:
        depth: false
      cache: false
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
      script:
        # update SF mirror
        - $OWTRAVISDIR/gitusf.sh
    #################################
    - stage: Bootstrap
      name: "Build minimal set of build tools Linux"
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=GCC
        - export OWVERBOSE=1
        # clear cache
        - $OWTRAVISDIR/cacheclr.sh
      install:
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/build.sh
    - # ...
      name: "Build minimal set of build tools OSX"
      if: type = cron
      os: osx
      compiler: clang
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=CLANG
        - export OWVERBOSE=1
        # clear cache
        - $OWTRAVISDIR/cacheclr.sh
      install:
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/build.sh
    - # ...
      name: "Build minimal set of build tools Windows"
      if: type = cron
      os: windows
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        #
        - test -n $CC && unset CC
        # set environmet variable
        - export OWTOOLS=VISUALC
        - export OWVERBOSE=1
        # clear cache
        - $OWTRAVISDIR/cacheclr.sh
      install:
      script:
        - $OWTRAVISDIR/build.cmd
    #################################
    - stage: Build1
      name: "OW tools build Linux"
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=GCC
      install:
        # install DOS Emulator
        - sudo apt-get install -y dosemu
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/build.sh
      before_cache:
        - $OWTRAVISDIR/cache3.sh save
    - # ...
      name: "OW tools build-1 OSX"
      if: type = cron
      os: osx
      compiler: clang
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=CLANG
      install:
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/build.sh
      before_cache:
        - $OWTRAVISDIR/cache1.sh save
    - # ...
      name: "OW tools build-1 Windows"
      if: type = cron
      os: windows
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        #
        - test -n $CC && unset CC
        # set environmet variable
        - export OWTOOLS=VISUALC
      install:
      script:
        - $OWTRAVISDIR/build.cmd
      before_cache:
        - $OWTRAVISDIR/cache1.sh save
    #################################
    - stage: Build2
      name: "OW tools build-2 OSX"
      if: type = cron
      os: osx
      compiler: clang
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=CLANG
        - export OWDOSBOX=dosbox
        - export SDL_VIDEODRIVER=dummy
      install:
        # install DOS Emulator
        - brew install dosbox
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/cache1.sh load
        - $OWTRAVISDIR/build.sh
      before_cache:
        - $OWTRAVISDIR/cache2.sh save
    - # ...
      name: "OW tools build-2 Windows"
      if: type = cron
      os: windows
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        #
        - test -n $CC && unset CC
        # set environmet variable
        - export OWTOOLS=VISUALC
      install:
      script:
        - $OWTRAVISDIR/cache1.sh load
        - $OWTRAVISDIR/build.cmd
      before_cache:
        - $OWTRAVISDIR/cache2.sh save
    #################################
    - stage: Build3
      name: "OW tools build-3 OSX"
      if: type = cron
      os: osx
      compiler: clang
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=CLANG
        - export OWDOSBOX=dosbox
        - export SDL_VIDEODRIVER=dummy
        - export OWDOCQUIET=0
        - export OWVERBOSE=1
      install:
        # install DOS Emulator
        - brew install dosbox
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/cache2.sh load
        - $OWTRAVISDIR/build.sh
      before_cache:
        - $OWTRAVISDIR/cache3.sh save
    - # ...
      name: "OW tools build-3 Windows"
      if: type = cron
      os: windows
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        - test -n $CC && unset CC
        # set environmet variable
        - export OWTOOLS=VISUALC
        - export OWDOCQUIET=0
        - export OWVERBOSE=1
      install:
      script:
        - $OWTRAVISDIR/cache2.sh load
        - $OWTRAVISDIR/build.cmd
      before_cache:
        - $OWTRAVISDIR/cache3.sh save
    #################################
    - stage: Update build
      name: "Update Build Linux"
      if: type IN (push, cron)
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=GCC
      install:
        - . $OWROOT/cmnvars.sh
      script:
        - true
    - # ...
      name: "Update Build Windows"
      if: type = cron
      os: windows
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=VISUALC
      install:
        - export WATCOM=$OWROOT/test
      script:
        - true
    #################################
    - stage: Tests
      name: "Test wasm assembler"
      if: type IN (push, cron)
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=WATCOM
        - export OWTRAVISTEST=WASM
      install:
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/test.sh
    - # ...
      name: "Test C compiler"
      if: type IN (push, cron)
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=WATCOM
        - export OWTRAVISTEST=C
      install:
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/test.sh
    - # ...
      name: "Test FORTRAN 77 compiler"
      if: type IN (push, cron)
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=WATCOM
        - export OWTRAVISTEST=F77
      install:
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/test.sh
    - # ...
      name: "Test C++ compiler"
      if: type IN (push, cron)
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=WATCOM
        - export OWTRAVISTEST=CXX
      install:
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/test.sh
    - # ...
      name: "Test C run-time library"
      if: type IN (push, cron)
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        # set environmet variable
        - export OWTOOLS=WATCOM
        - export OWTRAVISTEST=CRTL
      install:
        - export WATCOM=$OWROOT/test
        - export PATH=$WATCOM/binl:$PATH
        - export INCLUDE=$WATCOM/lh
        - unset LIB
        - . $OWROOT/cmnvars.sh
      script:
        - $OWTRAVISDIR/test.sh
    #################################
    - stage: Documentation
      name: "Create all Documentation"
      if: type = cron
      os: windows
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        - test -n $CC && unset CC
        # set environmet variable
        - export OWTOOLS=VISUALC
      script:
        - $OWTRAVISDIR/build.cmd
    #################################
    - stage: Release
      name: "Create all Installers Linux"
      if: type = cron
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        #
        - export OWTOOLS=GCC
        - OWRELROOT=$OWTRAVIS_BUILD_DIR
      install:
        - . $OWROOT/cmnvars.sh
        - $OWTRAVISDIR/cache3.sh load
      script:
        - $OWTRAVISDIR/build.sh
        - export TRAVIS_TAG=Current-build
      before_deploy:
        # Set up git tag for github release and commit it
        - export OWTMP=`git ls-remote --tags . | sed -n -e "s:\([0-9a-z]*\) *refs/tags/Current-build^{}:\1:p"`; true;
        - echo "${OWTMP}"
        - echo "${TRAVIS_COMMIT}"
        - if [ ! "$OWTMP" = "$TRAVIS_COMMIT" ]; then
            git remote set-url origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git;
            git tag -d $TRAVIS_TAG; true;
            git push --delete origin $TRAVIS_TAG; true;
            git tag -a -m "$(date +'%Y-%m-%d %H:%M:%S')" $TRAVIS_TAG $TRAVIS_COMMIT; true;
            git push origin $TRAVIS_TAG; true;
          fi
      deploy:
        provider: releases
        api_key: ${GITHUB_TOKEN}
        on:
          tags: true
        overwrite: true
        skip_cleanup: true
        file_glob: true
        file: $OWDISTRDIR/ow/bin/open-watcom-*
    #################################
    - stage: Release windows
      name: "Create Installer 64-bit Windows"
      if: type = cron
      os: windows
      before_install:
        # configure Git client
        - git config --global user.email "openwatcomtravis@gmail.com"
        - git config --global user.name "Open Watcom Travis"
        - git config --global push.default simple
        #
        - export OWTOOLS=VISUALC
        - OWRELROOT=$OWTRAVIS_BUILD_DIR
      install:
        - $OWTRAVISDIR/cache3.sh load
      script:
        - $OWTRAVISDIR/build.cmd
        - export TRAVIS_TAG=Current-build
      before_deploy:
        # Set up git tag for github release and commit it
        - export OWTMP=`git ls-remote --tags . | sed -n -e "s:\([0-9a-z]*\) *refs/tags/Current-build^{}:\1:p"`; true;
        - echo "${OWTMP}"
        - echo "${TRAVIS_COMMIT}"
        - if [ ! "$OWTMP" = "$TRAVIS_COMMIT" ]; then
            git remote set-url origin https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git;
            git tag -d $TRAVIS_TAG; true;
            git push --delete origin $TRAVIS_TAG; true;
            git tag -a -m "$(date +'%Y-%m-%d %H:%M:%S')" $TRAVIS_TAG $TRAVIS_COMMIT; true;
            git push origin $TRAVIS_TAG; true;
          fi
      deploy:
        provider: releases
        api_key: ${GITHUB_TOKEN}
        on:
          tags: true
        overwrite: true
        skip_cleanup: true
        file_glob: true
        file: $OWDISTRDIR/ow/bin/open-watcom-*
    #################################
    - stage: Clear cache
      name: "Delete build cache Linux"
      script:
        - $OWTRAVISDIR/cacheclr.sh
    - # ...
      name: "Delete build cache OSX"
      if: type = cron
      os: osx
      compiler: clang
      script:
        - $OWTRAVISDIR/cacheclr.sh
    - # ...
      name: "Delete build cache Windows"
      if: type = cron
      os: windows
      script:
        - $OWTRAVISDIR/cacheclr.sh
    #################################
