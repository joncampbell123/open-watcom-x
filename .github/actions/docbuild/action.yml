name: documentation-build
description: 'Process OW single documentation type build'
inputs:
  target:
    description: 'documentation type to process'
    required: false
    default: ''
    type: string
  relpath:
    description: 'binary release path'
    required: false
    default: 'rel'
    type: string
  owtarget:
    description: 'OW builder additional cmd line arguments'
    required: false
    default: ''
    type: string
  hostos:
    description: 'host os'
    required: false
    default: ''
    type: string
  suffixi:
    description: 'run-time artifact suffix'
    required: false
    default: ''
    type: string
  suffixo:
    description: 'documentation artifact suffix'
    required: false
    default: ''
    type: string
  buildcmd:
    description: 'build command'
    required: false
    default: ''
    type: string
  owtools:
    description: 'OW build compiler toolchain'
    required: false
    default: ''
    type: string
  noarchive:
    description: 'not use tar archive for artifacts'
    required: false
    default: ''
    type: string
  owdebug:
    description: 'verbosed/debug output for GH Actions scripts development'
    required: false
    default: ''
    type: string
runs:
  using: composite
  steps:
  - uses: "./.github/actions/dosboxin"
    with:
      hostos:       ${{ inputs.hostos }}
  - uses: "./.github/actions/artfload"
    with:
      hostos:       ${{ inputs.hostos }}
      gitpath:      'build binbuild'
      artifact:     "build ${{ inputs.suffixi }}"
      noarchive:    ${{ inputs.noarchive }}
      owdebug:      ${{ inputs.owdebug }}
  - name: Documentation Build
    run: ${{ inputs.buildcmd }}
    env:
      OWBUILD_STAGE: 'docs'
      OWDOCTARGET:   ${{ inputs.target }} ${{ inputs.owtarget }}
      OWTOOLS:       ${{ inputs.owtools }}
      OWROOT:        ${{ github.workspace }}
      OWDOSBOX:      'dosbox.exe'
      OWDOSBOXPATH:  ${{ github.workspace }}\ci\nt386
      OWDEBUG:       ${{ inputs.owdebug }}
      OWVERBOSE:     1
    shell: cmd
  - uses: "./.github/actions/artfsave"
    with:
      hostos:       ${{ inputs.hostos }}
      gitpath:      ${{ inputs.relpath }}
      artifact:     "rel ${{ inputs.suffixo }}"
      noarchive:    ${{ inputs.noarchive }}
      owdebug:      ${{ inputs.owdebug }}
