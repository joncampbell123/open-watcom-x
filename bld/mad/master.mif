#
# Master makefile for creating MADs (Machine Architecture Descriptions)
#

tree_depth = 4

proj_name = mad

!ifndef mad_autodepends
mad_autodepends = .AUTODEPEND
!endif

mad_ntverrc = ..

mad_nofpu = 1

!ifneq host_os win
mad_nocheckstack = 1
!endif

!ifeq host_cpu x64
sys_dll = 1
!endif

additional_clean = *.gh *.grc

dlltarg_name = mad$(dig_arch)

ntverrc_dll = $(dlltarg_name)

!include cproj.mif
!include defrule.mif
!include deftarg.mif
!include dllbase.mif

!include $(dig_dir)/client.mif
!include $(disasm_dir)/client.mif

#
# cflags
#
.c: ../c;../../c;$(dis_srcs);$(extra_srcs)

inc_dirs = -I. -I"../h" -I"../../h" -I"$(dig_dir)/h" $(dis_includes) $(extra_incs)

extra_cpp_flags = $(dig_arch_cpp_flags)

extra_c_flags_i86 = -zu
extra_c_flags_win = -zc

!ifdef __WATCOM_TOOLS__
extra_c_flags_f_madimp = -zlf -os     # -os ensures byte align for code
!endif

#
# lflags
#
lflags_dll_dos386   = sys rex_dos
lflags_dll_linux386 = sys rex_linux
lflags_dll_qnx386   = sys rex_qnx
lflags_dll_wini86   = sys windows

extra_l_flags_dll        = $(mad_dllbase_$(host))
extra_l_flags_dll_ntaxp  = op dosseg

#
# names
#
dlltarg_ext_os2386   = .d32
dlltarg_ext_qnx386   = .mad
dlltarg_ext_linux386 = .mad
dlltarg_ext_dos386   = .mad

!ifdef dlltarg_ext_$(host)
dlltarg_ext = $(dlltarg_ext_$(host))
!endif
!ifndef __WATCOM_TOOLS__
!ifdef ext_lib_shared
dlltarg_ext = $(ext_lib_shared)
!endif
!endif
!ifdef dlltarg_ext
additional_clean += *$(dlltarg_ext)
!endif

# explicit rules
##################

#
# DLL
#
dlltarg_prebuild_objs = $(dis_prereq)
dlltarg_objs          = madimp.obj $(dis_objs) $(imp_objs)
!include dlltarg.mif

#
# rc and others
#
distbls.gh : ./disbuild.exe
    @%make echo_execute
    $(noecho)$[@

./disbuild.exe : $(disasm_dir)/core/c/disbuild.c $(disbuild_headers)
    @%make echo_bldccl
    $(bld_ccl) $(ppflags_common) $(ppflags_autodep) $(bld_ppflags_sys) $(dig_arch_cpp_flags) $(bld_cppflags) $[@ -I"../h" $(dis_includes) $(bld_cclflags) $(bld_ldflags)
